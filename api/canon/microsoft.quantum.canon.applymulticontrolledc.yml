### YamlMime:QSharpType
uid: microsoft.quantum.canon.applymulticontrolledc
name: ApplyMultiControlledC
type: operation
namespace: Microsoft.Quantum.Canon
summary: >2
   Applies a multiply controlled version of singly controlled
   operation.
remarks: >2
   This operation uses only clean ancilla qubits.

   For the explanation and circuit diagram see Figure 4.10, Section 4.3 in Nielsen & Chuang
syntax: 'operation ApplyMultiControlledC (singlyControlledOp : (Qubit[] => ()), ccnot : CCNOTop, controls : Qubit[], targets : Qubit[]) : ()'
references: >2-
   - [ *Michael A. Nielsen , Isaac L. Chuang*,
       Quantum Computation and Quantum Information ](http://doi.org/10.1017/CBO9780511976667)
input:
  content: '(singlyControlledOp : (Qubit[] => ()), ccnot : CCNOTop, controls : Qubit[], targets : Qubit[])'
  types:
  - name: ccnot
    summary: >2-
       The ccnot gate to use for the construction
       ApplyMultiControlled calls singlyControlledOp with the argument of the length at least 1.
    uid: ccnotop
  - name: controls
    summary: ' The qubits an operation being controlled on, the length of controls must be at least 1.'
    uid: Qubit
    isPrimitive: true
    isArray: true
  - name: singlyControlledOp
    summary: " Singly controlled operation. The first qubit in the argument of the operation \n assumed to be a control and the rest are assumed to be target qubits."
    isOperation: true
    types:
    - uid: Qubit
      isPrimitive: true
      isArray: true
    - uid: ()
      isPrimitive: true
  - name: targets
    summary: >2
       The target qubits
    uid: Qubit
    isPrimitive: true
    isArray: true
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
functors:
- Controlled
