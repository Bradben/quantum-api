### YamlMime:QSharpType
uid: microsoft.quantum.canon.assertequalonbasisvector
name: AssertEqualOnBasisVector
type: operation
namespace: Microsoft.Quantum.Canon
summary: " Checks if the result of applying two operations givenU and expectedU to\n a basis state is the same. The basis state is described by `basis` parameter. \n See @\"Microsoft.Quantum.Canon.FlipToBasis\" function for more details on this\n description.\n"
syntax: 'operation AssertEqualOnBasisVector (basis : Int[], givenU : (Qubit[] => ()), expectedU : (Qubit[] => () : Adjoint), tolerance : Double) : ()'
input:
  content: '(basis : Int[], givenU : (Qubit[] => ()), expectedU : (Qubit[] => () : Adjoint), tolerance : Double)'
  types:
  - name: basis
    summary: >2-
       Basis state specified by a single-qubit basis state ID (0 <= id <= 3) for each of
       n qubits.
    uid: Int
    isPrimitive: true
    isArray: true
  - name: expectedU
    summary: ' Reference operation on n qubits that givenU is to be compared against.'
    isOperation: true
    types:
    - uid: Qubit
      isPrimitive: true
      isArray: true
    - uid: ()
      isPrimitive: true
  - name: givenU
    summary: ' Operation on n qubits to be checked.'
    isOperation: true
    types:
    - uid: Qubit
      isPrimitive: true
      isArray: true
    - uid: ()
      isPrimitive: true
  - name: tolerance
    summary: >2-
       Tolerance for the comparison of probabilities between the two operations'
       outcomes.
    uid: Double
    isPrimitive: true
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
