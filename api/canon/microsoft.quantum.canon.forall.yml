### YamlMime:QSharpType
uid: microsoft.quantum.canon.forall
name: ForAll
type: function
namespace: Microsoft.Quantum.Canon
remarks: " The function is defined for generic types, i.e., whenever we have \n an array `'T[]` and a function `predicate: 'T -> Bool` we can produce\n a `Bool` value that indicates if all elements satisfy `predicate`. \n "
syntax: "function ForAll (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: array
    uid: "'t"
    isArray: true
  - name: predicate
    types:
    - uid: "'t"
    - uid: microsoft.quantum.primitive.bool
output:
  content: Bool
  types:
  - summary: ' A `Bool` value of the AND function of the predicate applied to all elements.'
    uid: microsoft.quantum.primitive.bool
